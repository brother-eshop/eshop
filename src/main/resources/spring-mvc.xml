<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">
	<!-- ①：对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.eshop">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<bean class="org.springframework.http.converter.json.GsonHttpMessageConverter"/>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<mvc:default-servlet-handler />
	<!-- ②：拦截器的配置 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.eshop.web.intercepters.XSSIntercepter"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/group/*" />
			<bean class="com.eshop.web.intercepters.SessionIntercepter">
				<property name="allowUrls">
					<list>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<bean id="velocifyConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<!--<property name="resourceLoaderPath" value="/WEB-INF/view/" />-->
		<property name="configLocation" value="classpath:/velocity.properties" />
	</bean>
	<bean name="groupTemplate" class="org.fox.beetl.ext.spring.core.GroupTemplateFactoryBean">
		<property name="configFileResource" value="classpath:/beetl.properties"/>
		<property name="resourceLoader">
			<bean class="org.fox.beetl.ext.spring.resource.SpringServletContextResourceLoader"/>
		</property>
	</bean>
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<!--<property name="templateLoaderPath" value="/WEB-INF/view/" />-->
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="defaultEncoding">UTF-8</prop>
				<prop key="number_format">0.##########</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>
	</bean>
	<bean id="viewResolver" class="com.eshop.frameworks.core.view.MultiViewResover">
		<property name="resolvers">
			<map>
				<entry key="jsp">
					<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
						<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
						<property name="contentType" value="text/html;charset=UTF-8" />
						<property name="prefix" value="/WEB-INF/view/" />
						<property name="suffix" value=".jsp" />
					</bean>
				</entry>
				<entry key="vm">
					<bean class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
						<property name="cache" value="false" />
						<property name="prefix" value="/WEB-INF/view/" />
						<property name="suffix" value=".vm" />
						<property name="contentType" value="text/html;charset=UTF-8" />
						<property name="toolboxConfigLocation" value="/WEB-INF/vm/toolbox.xml" />
					</bean>
				</entry>
				<entry key="httl">
					<bean class="httl.web.springmvc.HttlViewResolver">
						<property name="contentType" value="text/html; charset=UTF-8" />
					</bean>
				</entry>
				<entry key="htm">
					<bean name="beetlViewResolver" class="org.fox.beetl.ext.spring.mvc.BeetlViewResolver">
						<property name="groupTemplate" ref="groupTemplate"/>
						<property name="prefix" value="/WEB-INF/view/"/>
						<property name="suffix" value=".htm"/>
					</bean>
				</entry>
				<entry key="html">
					<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
						<property name="contentType" value="text/html;charset=UTF-8" />
						<property name="prefix" value="/" />
						<property name="suffix" value=".html" />
					</bean>
				</entry>
				<entry key="ftl">
					<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
						<property name="cache" value="true" />
						<property name="prefix" value="/WEB-INF/view/"/>
						<property name="suffix" value=".ftl" />
						<property name="exposeSpringMacroHelpers" value="true" />
						<property name="exposeRequestAttributes" value="true" />
						<property name="exposeSessionAttributes" value="true" />
						<property name="contentType" value="text/html;charset=UTF-8" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="false" />
		<property name="favorParameter" value="false" />
		<property name="ignoreAcceptHeader" value="false" />
		<property name="mediaTypes" >
			<value>
				atom=application/atom+xml
				xml=application/xml
				html=text/html
				json=application/json
				jsonp=application/javascript
				*=*/*
			</value>
		</property>
	</bean>


	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- set the max upload size 10MB -->
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>10485760</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

	<bean id="springUtil" class="com.eshop.common.util.SpringUtil" />
	
	<!-- 全局异常配置 start -->    
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">    
		<property name="exceptionMappings">    
			<props>    
				<prop key="java.lang.Exception">/error/500</prop>    
				<prop key="java.lang.Throwable">/error/404</prop>    
			</props>    
		</property>    
		<property name="statusCodes">    
			<props>    
				<prop key="/error/500">500</prop>    
				<prop key="/error/404">404</prop>    
			</props>    
		</property>    
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->    
		<property name="warnLogCategory" value="WARN"></property>    
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->    
		<property name="defaultErrorView" value="/error/404"></property>    
		<!-- 默认HTTP状态码 -->    
		<property name="defaultStatusCode" value="500"></property>    
	</bean>    
	<!-- 全局异常配置 end --> 
	
	<!-- 初始化数据库 
    <bean class="liquibase.integration.spring.SpringLiquibase">
		<property name="dataSource" ref="readWriteDataSource" />
		<property name="changeLog"
			value="classpath:/db/changelog/master.xml" />
		<property name="contexts" value="production" />
	</bean>
	-->
</beans>
