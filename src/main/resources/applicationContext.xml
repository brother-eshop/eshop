<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/data/mongo  http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd  
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd"
	default-lazy-init="true" >
	<context:component-scan base-package="com.eshop">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	<!-- 配置文件加载 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/project.properties</value>
				<value>classpath:/mongodb.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 定义mongo对象，对应的是mongodb官方jar包中的Mongo，replica-set设置集群副本的ip地址和端口 -->
	<mongo:mongo id="mongo" host="${mongo.host}" port="${mongo.port}">
		<!-- 一些连接属性的设置 -->
		<mongo:options connections-per-host="${mongo.connectionsPerHost}"
			threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
			connect-timeout="${mongo.connectTimeout}" max-wait-time="${mongo.maxWaitTime}"
			auto-connect-retry="${mongo.autoConnectRetry}" socket-keep-alive="${mongo.socketKeepAlive}"
			socket-timeout="${mongo.socketTimeout}" slave-ok="${mongo.slaveOk}"
			write-number="${mongo.writeNumber}" write-timeout="${mongo.writeTimeout}" write-fsync="${mongo.writefsync}" />
	</mongo:mongo>
	<!-- mongo的工厂，通过它来取得mongo实例,dbname为mongodb的数据库名，没有的话会自动创建 -->
	<!--<mongo:db-factory id="mongoDbFactory" dbname="${mongo.dbname}" mongo-ref="mongo" username="${mongo.username}" password="${mongo.password}" />-->
	<mongo:db-factory id="mongoDbFactory" dbname="${mongo.dbname}" mongo-ref="mongo"  />
	<!-- mongodb的主要操作对象，所有对mongodb的增删改查的操作都是通过它完成 -->
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean>
	<!-- 映射转换器，扫描back-package目录下的文件，根据注释，把它们作为mongodb的一个collection的映射 -->
	<mongo:mapping-converter base-package="com.eshop.model.mongodb" />
	<!-- mongodb bean的仓库目录，会自动扫描扩展了MongoRepository接口的接口进行注入 -->
	<mongo:repositories base-package="com.eshop.frameworks.core.mongod" />
	
	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">class</prop>
				<prop key="class.resource.loader.class">
	                  org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				</prop>
				<prop key="velocimacro.library"></prop>
			</props>
		</property>
	</bean>
	<bean class="com.eshop.frameworks.core.intercepters.CascadingMongoEventListener" />
	<!--<bean class="com.eshop.web.listeners.InitKeywodListener" init-method="init" lazy-init="false"/>-->
	
	<bean id="sessionProvider" class="com.eshop.cache.session.Sessions" />
	<!--<import resource="memcached.xml" />-->
	
	<!-- 上传文件拦截，设置最大上传文件大小 10M=10*1024*1024(B)=10485760 bytes -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760" />
	</bean>
	<task:scheduled-tasks>   
        <task:scheduled ref="userSessionJob" method="removeInvalideSession" cron="0/30 * * * * ?"/>   
	</task:scheduled-tasks> 
	<bean id="userSessionJob" class="com.eshop.service.manager.UserSessionJob"/> 
	
	
	<bean id="emailExecutorPool" class="com.eshop.frameworks.core.mail.EmailExecutorPool">
		<property name="poolSize" value="5"/>
	</bean>
	<!-- 邮件发送线程类-->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="host" value="${email.host}" />
		<property name="username" value="${email.username}"></property>
		<property name="password" value="${email.password}"></property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">${email.smtp.auth}</prop>
				<prop key="mail.smtp.timeout">${email.smtp.timeout}</prop>
				<!--
					   <prop key="mail.smtp.starttls.enable">true</prop>
					   <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
					   <prop key="mail.smtp.socketFactory.fallback">false</prop>
					   -->
			</props>
		</property>
	</bean>
	<bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from">
			<value>${email.default.from}</value>
		</property>
	</bean>
	<bean id="mailSenderService" class="com.eshop.frameworks.core.mail.MailSenderService">
		<property name="emailExecutorPool" ref="emailExecutorPool" />
		<property name="mailSender" ref="mailSender" />
		<property name="simpleMailMessage" ref="simpleMailMessage" />
		<property name="velocityEngine" ref="velocityEngine" />
	</bean>
</beans>
